name: Validate PR Name
description: Validates the name of a pull request using conventional commit types and optional user-defined scopes.

inputs:
  scopes:
    description: A comma-separated list of valid scopes. Optional.
    required: false
  github-token:
    description: GitHub token used to post a comment on the PR.
    required: true

runs:
  using: "composite"
  steps:

    - name: Validate PR name and comment on failure
      shell: bash
      env:
        PR_NAME: ${{ github.event.pull_request.title }}
        SCOPES: ${{ inputs.scopes }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        REPO: ${{ github.repository }}
        ISSUE_NUMBER: ${{ github.event.pull_request.number }}
      run: |
        echo "üîç PR name: '$PR_NAME'"
        echo "üîç Scopes: '$SCOPES'"

        TYPES="feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert|release|hotfix"

        REGEX=""
        FAIL_MSG=""

        if [ -z "$SCOPES" ]; then
          SCOPE_REGEX='[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*'
          REGEX="^($TYPES)(\\(($SCOPE_REGEX)?\\))?!?: .+$"
        else
          IFS=',' read -ra SCOPE_LIST <<< "$SCOPES"
          for SCOPE in "${SCOPE_LIST[@]}"; do
            if [[ ! "$SCOPE" =~ ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$ ]]; then
              echo "‚ùå Invalid scope format: '$SCOPE'"
              echo "Scopes must be alphanumeric and may include hyphens not at start or end."
              FAIL_MSG="‚ùå **PR name validation failed**

              Invalid scope: \`$SCOPE\`
              Scopes must be alphanumeric and may include hyphens not at start or end."
              break
            fi
          done
          SCOPE_PATTERN=$(echo "$SCOPES" | sed 's/,/|/g')
          REGEX="^($TYPES)(\\(($SCOPE_PATTERN)\\))?!?: .+$"
        fi

        echo "üîß Generated regex: $REGEX"

        if [ -z "$FAIL_MSG" ]; then
          if [[ "$PR_NAME" =~ $REGEX ]]; then
            echo "‚úÖ PR name matches the pattern."
          else
            echo "‚ùå PR name does not match the required pattern: $REGEX"
            FAIL_MSG="‚ùå **PR name validation failed**

            Expected pattern: \`$REGEX\`
            Provided name: \`$PR_NAME\`"
          fi
        fi

        if [ -n "$FAIL_MSG" ]; then
          curl -s -X POST "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$(jq -nc --arg body "$FAIL_MSG" '{ body: $body }')"
          exit 1
        fi

        echo "‚úÖ PR name validation passed."
